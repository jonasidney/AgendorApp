@page "/pesquisa_servico"
@using MauiBlazorSQLServer.Data;
@using Radzen;
@using CRUDBlazorSQLServer.Data;
@using System.Diagnostics;
@using MauiBlazorSQLServer.Data.Database;
@inject DialogService dialogService
@inject NavigationManager UriHelper

<center><h3>Lista de serviços da empresa</h3></center>
<PageTitle>Lista de serviços da empresa</PageTitle>
<br />
<RadzenDataGrid @ref="dataGrid" style="color: #ffffff; --rz-grid-header-background-color: #ffffff; --rz-grid-header-font-weight: bold; padding-right: 10px; padding-left: 0px; margin-top: -10px;"
                Data="@servicosDaEmpresa.FindAll(e => e.Ativo)" TItem="Servico" AllowFiltering="true"
                GridLines="@Radzen.DataGridGridLines.Horizontal" AllowPaging="true" AllowSorting="true" AllowRowSelectOnRowClick="true">
    <Columns>
        <RadzenDataGridColumn TItem="Servico" Property="Descricao" Title="SERVICO" MinWidth="120px" Frozen="true">
            <Template Context="serv">
                <p style="white-space:pre-wrap; margin: auto;">@serv.Descricao</p>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Servico" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="60px">
            <Template Context="serv">
                <RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="edit" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1"
                              style="padding: 0px; margin: 0px;"
                              @onclick:stopPropagation="true" Click="@(args => AcaoBotaoEditarServico(serv))">
                </RadzenButton>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Servico" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="60px">
            <Template Context="serv">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1"
                              style="padding: 0px; margin: 0px;"
                              @onclick:stopPropagation="true" Click="@(args => AcaoBotaoDeletarServico(serv))">
                </RadzenButton>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<br />
<center>
    <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Adicionar" Click="@AcaoBotaoAdicionarServico" />
</center>


@code {
    private RadzenDataGrid<Servico> dataGrid;
    private List<Servico> servicosDaEmpresa;
    ServicoDAO dao = new();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        servicosDaEmpresa = dao.listarServicosEmpresa();
    }

    
    async void AcaoBotaoDeletarServico(Servico serv)
    {
        var confirmResult = await dialogService.Confirm("Deseja realmente excluir este servico?", "ATENÇÃO",
         new ConfirmOptions()
             {
                 OkButtonText = "SIM",
                 CancelButtonText = "NÃO"
             });
        if (confirmResult.HasValue && confirmResult.Value)
        {
            serv.Ativo = false;
            if (dao.excluir(serv.Codigo))
            {
                await dialogService.Alert("Servico excluído com sucesso!", "SUCESSO", new AlertOptions() { OkButtonText = "OK" });
            }
            else
            {
                await dialogService.Alert("Falha ao excluir servico!", "ERRO", new AlertOptions() { OkButtonText = "OK" });
            }
            servicosDaEmpresa = dao.listarServicosEmpresa();
            this.StateHasChanged();
            await dataGrid.Reload();
        }
    }
    
    async void AcaoBotaoEditarServico(Servico serv)
    {
        UriHelper.NavigateTo("/cadastro_servico/" + serv.Codigo);
    }

    async void AcaoBotaoAdicionarServico()
    {
        UriHelper.NavigateTo("/cadastro_servico/0");
    }

}
